# This is a basic workflow to help you get started with Actions
name: Connect to an AWS role from a GitHub repository

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  
  AWS_REGION : "us-west-2" #Change to reflect your Region

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  AssumeRoleAndCallIdentity:
    name: Test AWS Connection
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@main #how do you stay on top of versions?
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: arn:aws:iam::206190791305:role/github-role #the role must match below
          role-session-name: github-role # this is the role name in AWS
          aws-region: ${{ env.AWS_REGION }}
      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity
  docs:
      name: terraform-docs
      runs-on: ubuntu-latest
      permissions:
        contents: write
        #pull-requests: write
        #pages: write
      steps:
        - name: Git clone the repository
          uses: actions/checkout@main #how do you stay on top of versions?
        - uses: terraform-docs/gh-actions@main
          name: Generate terraform-docs and add to PR
          with:
            working-dir: .
            output-file: README.md
            output-method: inject
            git-push: "true" 
  format:
    name: terraform fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
      name: checkout
    - uses: hashicorp/setup-terraform@v2
    - name: terraform fmt
      id: fmt
      run: terraform fmt -check